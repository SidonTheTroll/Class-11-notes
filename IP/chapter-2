> Getting started with python 

29/04/23 

Planning - Algorithm or flow chart 

>> Algorithm 

Project: write a program that adds 2 numbers 

Step 1: start 
Step 2: take two numbers from user. 
Step 3: Add them 
Step 4: Print the sum
Step 5: Stop 

Flow chart is just a pictorial representation of the data above. 


C is the most common programming language. 

ARPANET	(Advanced Research Project Agency Network) was made to share military documents among US defence officials. 

Combining languages is not counted as a new language. 

Base Languages of Python: ABC, Modula 3 

Advantages: easy to use
			expressive
			fewer lines of code
			lower number of syntaxes 
			interpreted language
			cross platform language 
			free and open-source 
			variety of uses 

Disadvantages: not fast 
			   less libraries than C and Java 
			   Dynamic nature is vulnerable to security issues
			   cannot be compiled into a standalone executable 
			   more chances of bugs in the code 
			   more memory usage 

Library package: toolkits to implement in the code to increase the functionality easily along with saving time. 




Installing python in windows:


1. Go to the official website of Python at https://www.python.org/downloads/ and click on the "Download Python" button.

2. Choose the latest version of Python and select the appropriate Windows installer (either 32-bit or 64-bit) based on your system configuration.

3. Once the installer is downloaded, run the executable file to start the installation process.

4. In the installation wizard, select "Add Python to PATH" and click on "Customize installation" to choose the installation location and additional features.

5. Select the features you want to install and click "Next".

6. Choose the installation location and click "Install".

7. The installation process will begin, and it may take several minutes to complete.

8. Once the installation is complete, you can open the command prompt or PowerShell and type "python" to check if Python is installed correctly.

9. Alternatively, you can also run the IDLE (Integrated Development and Learning Environment) that comes with Python to write and run Python programs.

Python is pre-installed in Linux for a barebones installation, the following steps will installl python: 

1. Open the terminal and type "sudo <package manager syntax + appropriate flags> python3 

2. Enter password and enter y when the package manager asks for action. 

3. When done, type 'python3' in the terminal. 

>> IDE

IDE stands for Integrated Development Environment. An integrated development environment (IDE) is software for building applications that combines common developer tools into a single GUI. 

Advantages of using an IDE: 
	Code editing automation 
	Syntax highlighting 
	Intelligent code completion 
	Local build automation 
	Compilation
	Testing 
	Debugging 

• A python file ends with the extension '.py'

Examples of python IDEs: 
	PyCharm: PyCharm is a popular cross-platform IDE developed by JetBrains. It provides advanced features such as code completion, debugging, and version control integration.

	Visual Studio Code: Visual Studio Code is a lightweight but powerful cross-platform IDE developed by Microsoft. It has built-in support for Python, as well as many other programming languages.

	Spyder: Spyder is an open-source IDE specifically designed for scientific computing and data analysis with Python. It has a user-friendly interface and provides many features for data visualization and analysis.

	IDLE: IDLE is the official Python IDE that comes with the standard Python distribution. It provides basic features such as code editing, debugging, and execution.

	Jupyter Notebook: Jupyter Notebook is a web-based interactive computing environment that allows you to create and share documents containing live code, equations, visualizations, and narrative text.

	Sublime Text: Sublime Text is a lightweight text editor with powerful features and support for many programming languages, including Python. It has a large user community and many plugins and extensions available.

	Atom: Atom is another lightweight text editor with support for many programming languages, including Python. It has a user-friendly interface and many plugins and extensions available.
