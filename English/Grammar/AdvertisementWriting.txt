> Classified advertisements

• Used for the sales and purchase of property.

Rules: 
    1. Begin with available of sale/required for purchase.
    2. Mention the number of bedrooms, type of kitchen, bathroom fittings, etc. 
    3. State the locality available or preferred. 
    4. State price expected or preferred. 
    5. End with the contact address and phone number. 

Q> You have a flat in Gurgaon you want to sell it. Draft an advertisement for a leading daily giving all the necessary details. 
Ans>                                    FOR SALE 
Available for sale a 3BHK flat at Gurgaon. Fully furnished interiors. Kitchen and bathroom with modern fixtures and fittings. Eco-friendly surroundings, market complex nearby. Parking available for two vehicles. Price expected 80 lakhs. Contact: Mr. Snoop Catt, 25 Carol Bagh, Delhi, 26 (743) 65131. 

Q> You have recently constructed a house with all facilities in a posh area. But you have got a foreign assignment and would be going abroad soon. You wish to sell your house. Draft a suitable advertisement to be published in a leading daily.

Ans>                                     FOR SALE
Available for sale a 4-storey bungalow in Pune. Has modern interiors with marble checkerboard flooring with tinted glass. 3 bedrooms, kitchen with latest facilities and two medium-sized bathrooms. More rooms available in the attic. Nearby to a posh neighborhood with market and medical facilities. Parking available for five vehicles with a large front yard with garden. Price expected 4 crores. Contact: Mr. Kanye East, Sector 8, Pune, 40 (128) 58624. 

Q> You are an industrialist in buying an independent guest house in a very good locality in your city. Draft an advertisement in about 5 words to be published in a local daily. 

Ans>                              FOR PURCHASE PROPERTY 
Wanted a spacious well-built house in Colaba, Mumbai. Exquisitely designed, 4/5 BHK with attached bathrooms, spacious hall and lounge preferred. Parking for 6 vehicles preferable. Price offered: 1 crore. Interacted Parties contact: 21(086) 75039, contact@monolithproperties.com 



Rules for sales or purchase of vehicles. 

1. Begin with for sale/purchase or available/wanted. 
2. Mention the type of vehicle. 
3. Give a brief physical description. 
4. State price expected/offered. 
5. Contact address and number. 


Q> You want to sell your Maruti car. Draft a suitable advertisement in about 50 words to be published in a local daily. 

Ans>                            FOR SALE
Available Maruti 800 DX, 200 model in excellent working condition. Mileage 20 km per liter. White, scratchless, self-driven, modified allow wheels, customized interiors. Price expected 80,000. Contact: Opera Wildfury, 59 (068) 68379. 

Q> You want to purchase a 2-nd hand car. Craft a suitable advertisement in about 50 words to be published in a local daily. 

Ans>                                Wanted 
Second-hand car in good condition. Preferably a sedan or SUV with good mileage, well maintained, and with full-service history. Budget of 8 lakh to 12 lakh rupees. Please contact me if you have a car that fits the description. Contact: John Pork, Gomti Nagar, Lucknow, Uttar Pradesh, 66 (233) 58338. 


> Lost and Found 

(i) Begin with 'LOST' or 'Found' 
(ii) Specify the item
(iii) Give a brief physical description
(iv) Mention where or when lost or found. 
(v) Reward if any
(vi) Contact and address

Q> You have lost your purse/wallet. Draft an advertisement in about 50 words to be published in a local daily. 

Ans> Lost a brown leather walled while traveling from {localtion A} to {localtion B} via. {road}. It contains cash, voter ID, Debit card ({Card company}) and driving license. Finder will be suitably rewarded. Contact: Phil Swift, {location c}, {location B}, 39 (751) 46379.


Q> You found a briefcase while traveling by A.P. Express. Write a suitable advertisement for the lost and found columns of a National Daily.

Ans>                            LOST AND FOUND
Found a black {briefcase company} briefcase while traveling from {localtion A} to {localtion B} via. A.P. Express. The briefcase will be handed over to its rightful owner after ascertaining the particulars, identification and content. Contact: Gabe Newell, {address}, 90 (359) 67231.


Q> You have lost your wristwatch at a shopping mall. Write a suitable advertisement in about 50 words to be published in a local daily.

Ans>                LOST AND FOUND 

Lost a black Titan digital wristwatch in {shopping mall name} in {localtion}. Had black straps with black threading and white designs on the display. Finder will be rewarded suitably. Contact: Steven He, {location}, 63 (792) 59314. 




> Situation vacant

1. Begin with "Wanted" or "Required" 
2. State the name of the company or firm. 
3. Mentin the post and the number of vacancies.
4. State minimum qualification and experience required. 
5. Mention age, gender, and preferential qualification. 
6. Mention payscale and perks. 
7. State the mode of applying clearly. 
8. End with contact and phone number. 

Q> Hotel Lake View, Udaipur needs young and smart lady receptionist. Draft an advertisement in about 50 words to be published in a local daily.

Ans>                SITUATION VACANT 
Wanted smart young ladies in the age group 22-28 with pleasing personalities and fluency in communication for a reputed five-star hotel. Knowledge of a foreign language besides English will be preferred. Handsome salary and perks. Apply within 7 days for the post of Receptionist (3 posts) to Human Research Manager. Lake View Hotel, Udaipur, 52 (039) 64200. 

Q> Delhi Public School, Jorhat requires post-graduate teachers for English, Maths and Hindi. Draft a suitable advertisement for the classified column of a local daily. 

Ans>                SITUATION VACANT
Wanted teachers to teach English, Hindi and Maths in a newly established school. Teachers who are Post-Graduate will be preferred. Salary will be reasonable and depends on further qualifications. Apply within 2 weeks for the post of teacher (5 posts) to the Clerk of the school. Delhi Public School, Jorhat, 29 (139) 15479. 

>Practice Questions

Q> You are the Manager of Sunrise Industries, Delhi Road, Bahadurgarh. You want two typists for your office. Write an advertisement for the situation vacant column of a newspaper.

Ans>                 SITUATION VACANT
Wanted two typists for an industry firm. Minimum requirements include SSC certificate, above 16 age and 3 years of competitive typing. 120+ wpm with endurance preferable. Remote work available. Monthly income depends on fixed income plus assignments done. Contact: Manager, Sunrise Industries, Delhi Road, Bahadurgarh, 95 (603) 92756. 




25/05/23 

Situation wanted. 

Here it is an individual who seeks a job.

> Rules
1. State qualification and experience. 
2. Mention age and gender.
3. State the nature of job sought.
4. Mention the minimum salary expected.
5. End with contact address and phone number.

Q> You are Anil Verma of 257, Latchpat Nagar, New Delhi. You have just passed B. Tech from a prestigious engineering college. You are in need of a job around Delhi. Draft an advertisement for a local daily in about 50 words.

Ans>            SITUATION WANTED 
A highly qualified B. Tech engineer (fresher) from MIT, Massachusetts having specialization in Computer Security and pen-testing. Seeking a job in and around Delhi in the field of System Management and DevOps. 22-year-old male. Salary expected minimum 60,000 INR monthly. Contact: Anil Verma, 257, Latchpat Nagar, New Delhi, 23 (960) 39547.