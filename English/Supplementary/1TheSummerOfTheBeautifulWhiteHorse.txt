24/05/23 

> Short Answer Questions | Limit: 40 words. 

1. Who was Mourad? Why was he considered crazy? 
2. How does the narrator describe the tribe to which he belongs? 
3. What did Aram see when looked out of the window? Why could he not believe what he saw? 
4. Who does Aram compare Mourad with and why? 
5. What do we learn about Uncle Khosrove from the lesson? 
6. How did Uncle Khosrove react when his son told him that their house was on fire? 
7. What would the narrator and cousin do after enjoying their horse ride every morning? 
8. How did the narrator come to know that it was John Byro's horse that his cousin had stolen? What did he do then? 
9. How did Uncle Khosrove react to John Byro's problems? 
10. How did John Byro, the farmer behave when he saw Aram and Mourad with the stolen horse? 
11. The boys know that they had stolen the horse, yet they did not think that they had done something wrong, why? 
12. What did the narrator and his cousin do with the stolen horse in the end? 



1. Mourad was the cousin of Aram.
    He was considered crazy because he would often tell imaginative stories and create fantasies, which led others to perceive him as strange or mentally unstable. 

2. The narrator described the tribe to which he belong to 'poverty striken'. Every branch of the Garoghlanian family was living in the most amazing and comical poverty in the world. Nobody undertood how they got money for food. His tribe was the most famous for their honesty since the eleventh centry. Nobody would take advantage of anyone in the world just to steal. 

3. When Aram looked out of the window, he saw his cousin Mourad on a beautiful white horse calling him for a ride. 
    He could'd believe what he saw because it  wasn't daybreak yet and he thought he was dreaming.

4. Aram compared Mourad to uncle Khosrove because they both crazy in their own terms considering their similarities and inheritence of spirits.

5. Accroding to the lesson, uncle Khosrove was an enormous man with black hair and largest moustache in San Joaquin Valley. He was a short tempered man and also very irritable and impatient. He used to stop anyone from talking from talking by roaring, "It is no harm, pay no attention to it." 

6. When uncle Khosrove's son told him that their house was on fire, he was in the barber's shop and stood up and said, "It is no harm, pay no attention to it." When he barber also started saying, Khosrove roared, "Enough, it is no harm, I say." 

7. After the narrator and his cousin enjoyed he horseride every morning, the walked the horse quitely to the barn of a deserted vineyard which was abandoned by a farmer named Fetvajian. 

8. The narrator came to know that the horse belonged to Jond Byro after one afternoon John himself visited the narrator's house and had a talk with uncle Khosrove and said that his horsed had been lost for a month. 
    After that incident, Aram rushed to Mourad and told everything about the horse's owner and wanted him to promise that he would not return the horse until Aram learned horesriding. 

9. After hearing Jonh Byro's probelem, uncle Khosrove became irritated and roared that the loss of a horse is not a big deal. When John said that his legs hurt after walking ten miles and the horse cost him sixty dollars, Khosrover interrupted him again and said that he spitted on money. Then he got up and stalked out of the room, slamming the screen door. 

10. When Aram and Mourad ran into John Byro with the stolen horse, Jond inspected the horse eagerly and greeted them "Good Morning". Then he asked them what the name of the horse was. Mourad replied "My Heart" in Armenian. John sweared that it looked like the horse that stolen many weeks ago. Upon inspectng the horse's mouth he said that it might be his horse's twin knowing that the boys' tribe is is known for their honesty and would never steal. 

11. The boys knew that they had stolen a horse but didn't considered it stealing because they only used the horse for riding it. They had no intention of selling it. They thought that it was not stealing until they offered to sell the horse for money. 

12. In the end, Aram and Mourad took the horse to John Byro's vineyard in the morning and put it in the barn. Before leaving the horse, Mourad put his arms around it, psessed his nose into the horse's nose, patted it and they went away. 